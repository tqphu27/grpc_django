# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ml_pb2 as ml__pb2


class MachineLearningStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetUp = channel.unary_unary(
        '/MachineLearning/SetUp',
        request_serializer=ml__pb2.TokenRequest.SerializeToString,
        response_deserializer=ml__pb2.SetUpResponse.FromString,
        )
    self.Import = channel.unary_unary(
        '/MachineLearning/Import',
        request_serializer=ml__pb2.ImportRequest.SerializeToString,
        response_deserializer=ml__pb2.ImportResponse.FromString,
        )
    self.PerformAction = channel.unary_unary(
        '/MachineLearning/PerformAction',
        request_serializer=ml__pb2.ActionRequest.SerializeToString,
        response_deserializer=ml__pb2.ActionResponse.FromString,
        )


class MachineLearningServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetUp(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Import(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PerformAction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MachineLearningServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetUp': grpc.unary_unary_rpc_method_handler(
          servicer.SetUp,
          request_deserializer=ml__pb2.TokenRequest.FromString,
          response_serializer=ml__pb2.SetUpResponse.SerializeToString,
      ),
      'Import': grpc.unary_unary_rpc_method_handler(
          servicer.Import,
          request_deserializer=ml__pb2.ImportRequest.FromString,
          response_serializer=ml__pb2.ImportResponse.SerializeToString,
      ),
      'PerformAction': grpc.unary_unary_rpc_method_handler(
          servicer.PerformAction,
          request_deserializer=ml__pb2.ActionRequest.FromString,
          response_serializer=ml__pb2.ActionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MachineLearning', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
